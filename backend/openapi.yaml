openapi: 3.0.3
info:
  title: CLI-Forum API
  description: API documentation for CLI-Forum
  version: 1.0.0
servers:
  - url: /api
    description: API base path
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    LoginRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username
        password:
          type: string
          description: Password
          format: password
    LoginResponse:
      type: object
      properties:
        token:
          type: string
          description: JWT token
    RegisterRequest:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: Username
        password:
          type: string
          description: Password
          format: password
    PostCreateRequest:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          description: Post title
        content:
          type: string
          description: Post content
    PostResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Post ID
        author_id:
          type: string
          format: uuid
          description: Author ID
        title:
          type: string
          description: Post title
        content:
          type: string
          description: Post content
        create_at:
          type: string
          format: date-time
          description: Creation time
    CommentCreateRequest:
      type: object
      required:
        - title
        - content
      properties:
        title:
          type: string
          description: Comment title
        content:
          type: string
          description: Comment content
    CommentResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Comment ID
        post_id:
          type: string
          format: uuid
          description: Post ID
        author_id:
          type: string
          format: uuid
          description: Author ID
        title:
          type: string
          description: Comment title
        content:
          type: string
          description: Comment content
        created_at:
          type: string
          format: date-time
          description: Creation time
    Error:
      type: object
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Error details
paths:
  /login:
    post:
      summary: User login
      description: Login to the system using username and password
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '401':
          description: Authentication failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /register:
    post:
      summary: User registration
      description: Register a new user
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: Registration successful
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /posts:
    get:
      summary: Get all posts
      description: Retrieve all posts in the system
      tags:
        - Posts
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved post list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a post
      description: Create a new post
      tags:
        - Posts
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreateRequest'
      responses:
        '200':
          description: Post created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /post/{id}:
    get:
      summary: Get a specific post
      description: Retrieve a specific post by ID
      tags:
        - Posts
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Post ID
      responses:
        '200':
          description: Successfully retrieved post
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponse'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /comments:
    get:
      summary: Get all comments
      description: Retrieve all comments in the system
      tags:
        - Comments
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Successfully retrieved comment list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /comment/{id}:
    get:
      summary: Get a specific comment
      description: Retrieve a specific comment by ID
      tags:
        - Comments
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Comment ID
      responses:
        '200':
          description: Successfully retrieved comment
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '404':
          description: Comment not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /post/{post_id}/comments:
    get:
      summary: Get all comments for a post
      description: Retrieve all comments for a specific post
      tags:
        - Comments
      security:
        - BearerAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Post ID
      responses:
        '200':
          description: Successfully retrieved comment list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentResponse'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a comment for a post
      description: Create a new comment for a specific post
      tags:
        - Comments
      security:
        - BearerAuth: []
      parameters:
        - name: post_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Post ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreateRequest'
      responses:
        '200':
          description: Comment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Post not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 